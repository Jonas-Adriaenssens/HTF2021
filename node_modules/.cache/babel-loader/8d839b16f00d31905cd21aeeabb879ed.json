{"ast":null,"code":"var _jsxFileName = \"/Users/jonasadriaenssens/Documents/GitHub/HTF2021/src/Components/Cluedo/Cluedo.js\",\n    _s = $RefreshSig$();\n\nimport { Switch } from \"react-router-dom\";\nimport React, { useCallback, useState } from \"react\";\nimport CluedoActive from \"./CluedoActive\";\nimport GameOver from \"./CluedoEnd\";\nimport CluedoStart from \"./CluedoStart\";\nimport { useSettings } from \"../context/useSettings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cluedo = () => {\n  _s();\n\n  const {\n    settings\n  } = useSettings();\n  const [gameKey, setKey] = useState(null);\n  const [gameOver, setGameOver] = useState(null);\n  const handleEndGame = useCallback(() => {\n    setKey(null);\n    setGameOver(null);\n  }, []);\n  return settings ? /*#__PURE__*/_jsxDEV(Switch, {\n    children: [!gameKey && /*#__PURE__*/_jsxDEV(CluedoStart, {\n      onStart: setKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 20\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(GameOver, {\n      outcome: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, this), console.log(\"new game \" + gameKey), /*#__PURE__*/_jsxDEV(CluedoActive, {\n      gameKey: gameKey,\n      onEndGame: handleEndGame,\n      onArrest: setGameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(Cluedo, \"aBfezILWYQ9+2yCmXV1e7CKZ88M=\", false, function () {\n  return [useSettings];\n});\n\n_c = Cluedo;\nexport default Cluedo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cluedo\");","map":{"version":3,"sources":["/Users/jonasadriaenssens/Documents/GitHub/HTF2021/src/Components/Cluedo/Cluedo.js"],"names":["Switch","React","useCallback","useState","CluedoActive","GameOver","CluedoStart","useSettings","Cluedo","settings","gameKey","setKey","gameOver","setGameOver","handleEndGame","console","log"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAeF,WAAW,EAAhC;AAEA,QAAM,CAACG,OAAD,EAAUC,MAAV,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAMW,aAAa,GAAGZ,WAAW,CAAC,MAAM;AACtCS,IAAAA,MAAM,CAAC,IAAD,CAAN;AACAE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHgC,EAG9B,EAH8B,CAAjC;AAKA,SAAOJ,QAAQ,gBACb,QAAC,MAAD;AAAA,eACG,CAACC,OAAD,iBAAY,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA,YADf,EAEGC,QAAQ,iBAAI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFf,EAGGG,OAAO,CAACC,GAAR,CAAY,cAAeN,OAA3B,CAHH,eAME,QAAC,YAAD;AACE,MAAA,OAAO,EAAEA,OADX;AAEE,MAAA,SAAS,EAAEI,aAFb;AAGE,MAAA,QAAQ,EAAED;AAHZ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADa,GAmBX,IAnBJ;AAoBD,CA/BD;;GAAML,M;UACiBD,W;;;KADjBC,M;AAiCN,eAAeA,MAAf","sourcesContent":["import { Switch } from \"react-router-dom\";\nimport React, { useCallback, useState } from \"react\";\nimport CluedoActive from \"./CluedoActive\";\nimport GameOver from \"./CluedoEnd\";\nimport CluedoStart from \"./CluedoStart\";\nimport { useSettings } from \"../context/useSettings\";\n\nconst Cluedo = () => {\n  const { settings } = useSettings();\n\n  const [gameKey, setKey] = useState(null);\n  const [gameOver, setGameOver] = useState(null);\n\n  const handleEndGame = useCallback(() => {\n    setKey(null);\n    setGameOver(null);\n  }, []);\n\n  return settings ? (\n    <Switch>\n      {!gameKey && <CluedoStart onStart={setKey} /> }\n      {gameOver && <GameOver outcome={gameOver} />}\n      {console.log(\"new game \"  + gameKey)}\n\n       \n      <CluedoActive\n        gameKey={gameKey}\n        onEndGame={handleEndGame}\n        onArrest={setGameOver}\n\n        \n    />\n    </Switch>\n  \n  \n  \n  \n  ) : null;\n};\n\nexport default Cluedo;\n"]},"metadata":{},"sourceType":"module"}