{"ast":null,"code":"var _jsxFileName = \"/Users/jonasadriaenssens/Documents/GitHub/HTF2021/src/Components/Forms/MakeSuggestionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { useSettings } from \"../context/useSettings\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport Select from 'react-select';\nimport Button from \"../Button\";\nimport { CluesContext } from \"../Main\";\nimport axios from \"axios\";\n/*\n   SUGGESTIE FORMULIER\n   -------------------\n   Maak hier een formulier om een suggestie te verrichten.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MakeSuggestionForm = ({\n  gameKey,\n  selectedRoom\n}) => {\n  _s();\n\n  const {\n    settings\n  } = useSettings();\n  const clues = useContext(CluesContext);\n  const [weapon, setWeapon] = useState(0);\n  const [suspect, setSuspect] = useState(0);\n\n  const filteredClues = filterWord => {\n    return clues.filter(clue => clue.type == filterWord);\n  };\n\n  const makeSuggestion = () => {\n    console.log(gameKey);\n    console.log(selectedRoom);\n    bodyFormData = {\n      \"room\": \" \",\n      \"weapon\": \" \",\n      \"suspect\": \" \"\n    };\n    axios({\n      method: \"post\",\n      url: \"https://htf-2021.calibrate.be/api/cluedo/guess\",\n      data: bodyFormData\n    }).then(function (response) {\n      //handle success\n      console.log(response);\n    }).catch(function (response) {\n      //handle error\n      console.log(response);\n    }); // axios.post(\"https://htf-2021.calibrate.be/api/cluedo/new-game\" , {\n    //   auth: {\n    //     username: \"mortarcycle\",\n    //     password: \"hackthefuture\"\n    //   }\n    // }).then((res)=>{\n    //   console.log(res.data.key)\n    //   onStart(res.data.key)\n    // }).catch(err => {\n    //   console.log(err)\n    // }); \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Maak een suggestie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Weapon: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [filteredClues(\"weapon\").map(clue => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: clue.title,\n        children: clue.title\n      }, clue.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Suspect: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSuspect(e.id),\n      children: [filteredClues(\"suspect\").map(clue => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: clue.title,\n        children: clue.title\n      }, clue.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 12\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: makeSuggestion,\n      value: \"Submit to the overlord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MakeSuggestionForm, \"pUApvqqJ+r4MELX8NoYaJi435TU=\", false, function () {\n  return [useSettings];\n});\n\n_c = MakeSuggestionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeSuggestionForm\");","map":{"version":3,"sources":["/Users/jonasadriaenssens/Documents/GitHub/HTF2021/src/Components/Forms/MakeSuggestionForm.js"],"names":["React","useContext","useState","useSettings","Dropdown","Select","Button","CluesContext","axios","MakeSuggestionForm","gameKey","selectedRoom","settings","clues","weapon","setWeapon","suspect","setSuspect","filteredClues","filterWord","filter","clue","type","makeSuggestion","console","log","bodyFormData","method","url","data","then","response","catch","map","title","id","e"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from \"react\";\nimport { useSettings } from \"../context/useSettings\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport Select from 'react-select';\nimport Button from \"../Button\";\nimport { CluesContext } from \"../Main\";\nimport axios from \"axios\";\n\n/*\n   SUGGESTIE FORMULIER\n   -------------------\n   Maak hier een formulier om een suggestie te verrichten.\n*/\n\nexport const MakeSuggestionForm = ({ gameKey, selectedRoom }) => {\n  const { settings } = useSettings();\n  const clues  = useContext(CluesContext);\n\n  const [weapon, setWeapon] = useState(0);\n  const [suspect, setSuspect] = useState(0);\n\n  const filteredClues = (filterWord) => {\n    return clues.filter(clue => clue.type == filterWord)\n  }\n\n  const makeSuggestion = () => {\n\n    console.log(gameKey)\n    console.log(selectedRoom)\n    \n\n    bodyFormData = {\n      \"room\" : \" \" ,\n      \"weapon\" : \" \" , \n      \"suspect\": \" \"\n\n\n    }\n\n\n    axios({\n      method: \"post\",\n      url: \"https://htf-2021.calibrate.be/api/cluedo/guess\",\n      data: bodyFormData,\n    })\n      .then(function (response) {\n        //handle success\n        console.log(response);\n      })\n      .catch(function (response) {\n        //handle error\n        console.log(response);\n      });\n\n    // axios.post(\"https://htf-2021.calibrate.be/api/cluedo/new-game\" , {\n    //   auth: {\n    //     username: \"mortarcycle\",\n    //     password: \"hackthefuture\"\n    //   }\n    // }).then((res)=>{\n\n    //   console.log(res.data.key)\n    \n    //   onStart(res.data.key)\n\n    // }).catch(err => {\n    //   console.log(err)\n    // }); \n\n\n\n  }\n\n\n\n  return (\n    <div>\n      <h2>Maak een suggestie</h2>\n    <h4>Weapon: </h4>\n    <select>\n        {filteredClues(\"weapon\").map(clue =>\n           <option key={clue.id} value={clue.title}>{clue.title}</option>\n        )};\n    </select>\n\n    <h4>Suspect: </h4>\n    <select onChange={(e) => setSuspect(e.id)} >\n        {filteredClues(\"suspect\").map(clue =>\n           <option key={clue.id} value={clue.title}>{clue.title}</option>\n        )};\n    </select>\n\n     <Button onClick={makeSuggestion} value=\"Submit to the overlord\"/>     \n\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}