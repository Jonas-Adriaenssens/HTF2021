{"ast":null,"code":"var _jsxFileName = \"/Users/jonasadriaenssens/Documents/GitHub/HTF2021/src/Components/Checklist.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tasks = [{\n  id: 0,\n  completed: false,\n  description: \"Toon verdachten, wapens en kamers op de aanwijzingen pagina.\"\n}, {\n  id: 1,\n  completed: false,\n  description: \"Start een spel en toon de kamers van het huis.\"\n}, {\n  id: 2,\n  completed: false,\n  description: \"Maak suggesties met een verdachte en een wapen.\"\n}, {\n  id: 3,\n  completed: false,\n  description: \"Maak een arrestatie met een verdachte, een wapen en een kamer.\"\n}, {\n  id: 4,\n  completed: false,\n  description: \"Houd een shortlist bij in notities op basis van je suggesties.\"\n}, {\n  id: 5,\n  completed: false,\n  description: \"Extra: Maak een knop die het spel automatisch wint.\"\n}];\n\nconst Checklist = () => {\n  _s();\n\n  var _JSON$parse;\n\n  const [challenges, setChallenges] = useState((_JSON$parse = JSON.parse(sessionStorage.getItem(\"challengeList\"))) !== null && _JSON$parse !== void 0 ? _JSON$parse : tasks);\n\n  const toggleComplete = id => {\n    //set completed of item to true/false\n    let updatedList = challenges.map(challenge => challenge.id === id ? { ...challenge,\n      completed: !challenge.completed\n    } : challenge); //update sessionStorage and constant\n\n    sessionStorage.setItem(\"challengeList\", JSON.stringify(updatedList));\n    setChallenges(updatedList);\n  };\n\n  const challengeList = challenges.map(challenge => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => toggleComplete(challenge.id),\n        checked: challenge.completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"challenge-item\",\n      onClick: () => toggleComplete(challenge.id),\n      children: challenge.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, challenge.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"challenges\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"challenge-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            className: \"challenge-title\",\n            children: \"Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: challengeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checklist, \"okLL/5ZUg06NmLpQTv7tG4pl7yU=\");\n\n_c = Checklist;\nexport default Checklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"sources":["/Users/jonasadriaenssens/Documents/GitHub/HTF2021/src/Components/Checklist.js"],"names":["useState","tasks","id","completed","description","Checklist","challenges","setChallenges","JSON","parse","sessionStorage","getItem","toggleComplete","updatedList","map","challenge","setItem","stringify","challengeList"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEC,EAAAA,WAAW,EAAE;AAHf,CADY,EAMZ;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEC,EAAAA,WAAW,EAAE;AAHf,CANY,EAWZ;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEC,EAAAA,WAAW,EAAE;AAHf,CAXY,EAgBZ;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEC,EAAAA,WAAW,EACT;AAJJ,CAhBY,EAsBZ;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEC,EAAAA,WAAW,EACT;AAJJ,CAtBY,EA4BZ;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEC,EAAAA,WAAW,EAAE;AAHf,CA5BY,CAAd;;AAmCA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,gBAC1CQ,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,eAAvB,CAAX,CAD0C,qDACaV,KADb,CAA5C;;AAIA,QAAMW,cAAc,GAAIV,EAAD,IAAQ;AAC7B;AACA,QAAIW,WAAW,GAAGP,UAAU,CAACQ,GAAX,CAAgBC,SAAD,IAC/BA,SAAS,CAACb,EAAV,KAAiBA,EAAjB,GACI,EAAE,GAAGa,SAAL;AAAgBZ,MAAAA,SAAS,EAAE,CAACY,SAAS,CAACZ;AAAtC,KADJ,GAEIY,SAHY,CAAlB,CAF6B,CAQ7B;;AACAL,IAAAA,cAAc,CAACM,OAAf,CAAuB,eAAvB,EAAwCR,IAAI,CAACS,SAAL,CAAeJ,WAAf,CAAxC;AACAN,IAAAA,aAAa,CAACM,WAAD,CAAb;AACD,GAXD;;AAaA,QAAMK,aAAa,GAAGZ,UAAU,CAACQ,GAAX,CAAgBC,SAAD,iBACnC;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,QAAQ,EAAE,MAAMH,cAAc,CAACG,SAAS,CAACb,EAAX,CAFhC;AAGE,QAAA,OAAO,EAAEa,SAAS,CAACZ;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,OAAO,EAAE,MAAMS,cAAc,CAACG,SAAS,CAACb,EAAX,CAF/B;AAAA,gBAIGa,SAAS,CAACX;AAJb;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,KAASW,SAAS,CAACb,EAAnB;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,iCACE;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAgB,YAAA,SAAS,EAAC,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBAAQgB;AAAR;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApDD;;GAAMb,S;;KAAAA,S;AAsDN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\n\nconst tasks = [\n  {\n    id: 0,\n    completed: false,\n    description: \"Toon verdachten, wapens en kamers op de aanwijzingen pagina.\",\n  },\n  {\n    id: 1,\n    completed: false,\n    description: \"Start een spel en toon de kamers van het huis.\",\n  },\n  {\n    id: 2,\n    completed: false,\n    description: \"Maak suggesties met een verdachte en een wapen.\",\n  },\n  {\n    id: 3,\n    completed: false,\n    description:\n      \"Maak een arrestatie met een verdachte, een wapen en een kamer.\",\n  },\n  {\n    id: 4,\n    completed: false,\n    description:\n      \"Houd een shortlist bij in notities op basis van je suggesties.\",\n  },\n  {\n    id: 5,\n    completed: false,\n    description: \"Extra: Maak een knop die het spel automatisch wint.\",\n  },\n];\n\nconst Checklist = () => {\n  const [challenges, setChallenges] = useState(\n    JSON.parse(sessionStorage.getItem(\"challengeList\")) ?? tasks\n  );\n\n  const toggleComplete = (id) => {\n    //set completed of item to true/false\n    let updatedList = challenges.map((challenge) =>\n      challenge.id === id\n        ? { ...challenge, completed: !challenge.completed }\n        : challenge\n    );\n\n    //update sessionStorage and constant\n    sessionStorage.setItem(\"challengeList\", JSON.stringify(updatedList));\n    setChallenges(updatedList);\n  };\n\n  const challengeList = challenges.map((challenge) => (\n    <tr key={challenge.id}>\n      <td>\n        <input\n          type=\"checkbox\"\n          onChange={() => toggleComplete(challenge.id)}\n          checked={challenge.completed}\n        />\n      </td>\n\n      <td\n        className=\"challenge-item\"\n        onClick={() => toggleComplete(challenge.id)}\n      >\n        {challenge.description}\n      </td>\n    </tr>\n  ));\n\n  return (\n    <div className=\"challenges\">\n      <table className=\"challenge-list\">\n        <thead>\n          <tr>\n            <th colSpan=\"2\" className=\"challenge-title\">\n              Challenges\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>{challengeList}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Checklist;\n"]},"metadata":{},"sourceType":"module"}