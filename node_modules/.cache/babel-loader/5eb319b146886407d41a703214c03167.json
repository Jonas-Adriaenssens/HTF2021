{"ast":null,"code":"var _jsxFileName = \"/Users/jonasadriaenssens/Documents/GitHub/HTF2021/src/Components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Menu from \"./Menu\";\nimport Checklist from \"./Checklist\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Intro from \"./Intro\";\nimport Cluedo from \"./Cluedo/Cluedo\";\nimport Clues from \"./Clues/Clues\";\nimport { useSettings } from \"./context/useSettings\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CluesContext = /*#__PURE__*/React.createContext();\nexport const Main = () => {\n  _s();\n\n  const {\n    settings,\n    setSettings\n  } = useSettings();\n  const [clues, setClues] = useState();\n  useEffect(() => {\n    setSettings({\n      baseURL: process.env.REACT_APP_BASE_URL,\n      url: {\n        new: process.env.REACT_APP_URL_NEW,\n        clues: process.env.REACT_APP_URL_CLUES,\n        suggest: process.env.REACT_APP_URL_SUGGEST,\n        accuse: process.env.REACT_APP_URL_ACCUSE\n      },\n      auth: {\n        username: process.env.REACT_APP_USERNAME,\n        password: process.env.REACT_APP_PASSWORD\n      },\n      clueTypes: {\n        suspect: process.env.REACT_APP_SUSPECT,\n        weapon: process.env.REACT_APP_WEAPON,\n        room: process.env.REACT_APP_ROOM\n      }\n    });\n  }, [setSettings]);\n  useEffect(() => {\n    if (settings) {\n      // De settings zijn geladen, haal hier de aanwijzingen op en bewaar ze in de state (setClues)\n      console.log(\"userename : \" + settings.map(setting => setting.username)); //TODO: fix => settings are undefined ? => get rid of hardcoded username and password\n\n      axios.get(\"https://htf-2021.calibrate.be/api/cluedo/clues\", {\n        auth: {\n          username: \"mortarcycle\",\n          password: \"hackthefuture\"\n        }\n      }).then(res => {\n        const clues = res.data;\n        setClues(clues);\n        console.log(res.data);\n        console.log(\"clues: \" + clues.map(clue => clue.id)); // clues.forEach(clue => \n        //   setClues(\n        //     {\n        //       type: clue.type,\n        //       id: clue.id,\n        //       title: clue.title,\n        //     }\n        //   )\n        //   )\n        //   console.log(clue.type)\n        // });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [settings]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hack The Future\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-1\",\n        children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Checklist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-2\",\n        children: /*#__PURE__*/_jsxDEV(CluesContext.Provider, {\n          value: clues,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: [\"/\", \"/intro\"],\n              exact: true,\n              render: () => /*#__PURE__*/_jsxDEV(Intro, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/cluedo\",\n              render: () => /*#__PURE__*/_jsxDEV(Cluedo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/clues\",\n              render: () => /*#__PURE__*/_jsxDEV(Clues, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"kQQmK56DgqMinqflnBBqzw+zzao=\", false, function () {\n  return [useSettings];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/jonasadriaenssens/Documents/GitHub/HTF2021/src/Components/Main.js"],"names":["React","useEffect","useState","Menu","Checklist","BrowserRouter","Router","Route","Switch","Intro","Cluedo","Clues","useSettings","axios","CluesContext","createContext","Main","settings","setSettings","clues","setClues","baseURL","process","env","REACT_APP_BASE_URL","url","new","REACT_APP_URL_NEW","REACT_APP_URL_CLUES","suggest","REACT_APP_URL_SUGGEST","accuse","REACT_APP_URL_ACCUSE","auth","username","REACT_APP_USERNAME","password","REACT_APP_PASSWORD","clueTypes","suspect","REACT_APP_SUSPECT","weapon","REACT_APP_WEAPON","room","REACT_APP_ROOM","console","log","map","setting","get","then","res","data","clue","id","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,YAAY,gBAAGd,KAAK,CAACe,aAAN,EAArB;AAEP,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BN,WAAW,EAA7C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,WAAW,CAAC;AACVG,MAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,kBADX;AAEVC,MAAAA,GAAG,EAAE;AACHC,QAAAA,GAAG,EAAEJ,OAAO,CAACC,GAAR,CAAYI,iBADd;AAEHR,QAAAA,KAAK,EAAEG,OAAO,CAACC,GAAR,CAAYK,mBAFhB;AAGHC,QAAAA,OAAO,EAAEP,OAAO,CAACC,GAAR,CAAYO,qBAHlB;AAIHC,QAAAA,MAAM,EAAET,OAAO,CAACC,GAAR,CAAYS;AAJjB,OAFK;AAQVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAEZ,OAAO,CAACC,GAAR,CAAYY,kBADlB;AAEJC,QAAAA,QAAQ,EAAEd,OAAO,CAACC,GAAR,CAAYc;AAFlB,OARI;AAYVC,MAAAA,SAAS,EAAE;AACTC,QAAAA,OAAO,EAAEjB,OAAO,CAACC,GAAR,CAAYiB,iBADZ;AAETC,QAAAA,MAAM,EAAEnB,OAAO,CAACC,GAAR,CAAYmB,gBAFX;AAGTC,QAAAA,IAAI,EAAErB,OAAO,CAACC,GAAR,CAAYqB;AAHT;AAZD,KAAD,CAAX;AAkBD,GAnBQ,EAmBN,CAAC1B,WAAD,CAnBM,CAAT;AAqBAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,QAAJ,EAAc;AACZ;AACA4B,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiB7B,QAAQ,CAAC8B,GAAT,CAAaC,OAAO,IAAIA,OAAO,CAACd,QAAhC,CAA7B,EAFY,CAGZ;;AAEArB,MAAAA,KAAK,CAACoC,GAAN,CAAU,gDAAV,EAA6D;AAC7DhB,QAAAA,IAAI,EAAE;AACJC,UAAAA,QAAQ,EAAE,aADN;AAEJE,UAAAA,QAAQ,EAAE;AAFN;AADuD,OAA7D,EAKCc,IALD,CAKOC,GAAD,IAAO;AAEb,cAAMhC,KAAK,GAAGgC,GAAG,CAACC,IAAlB;AAEAhC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AAEA0B,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAhB;AAEAP,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAY3B,KAAK,CAAC4B,GAAN,CAAUM,IAAI,IAAIA,IAAI,CAACC,EAAvB,CAAxB,EARa,CAUb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGD,OA5BC,EA4BCC,KA5BD,CA4BOC,GAAG,IAAI;AACdX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD,OA9BC;AAqCD;AACF,GA5CQ,EA4CN,CAACvC,QAAD,CA5CM,CAAT;AA8CA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAE,SAAhB;AAAA,gCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,SAAS,EAAE,SAAhB;AAAA,+BACE,QAAC,YAAD,CAAc,QAAd;AAAuB,UAAA,KAAK,EAAEE,KAA9B;AAAA,iCACE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAE,CAAC,GAAD,EAAM,QAAN,CAAb;AAA8B,cAAA,KAAK,MAAnC;AAAoC,cAAA,MAAM,EAAE,mBAAM,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,SAAZ;AAAsB,cAAA,MAAM,EAAE,mBAAM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,MAAM,EAAE,mBAAM,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA3FM;;GAAMH,I;UACuBJ,W;;;KADvBI,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Menu from \"./Menu\";\nimport Checklist from \"./Checklist\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Intro from \"./Intro\";\nimport Cluedo from \"./Cluedo/Cluedo\";\nimport Clues from \"./Clues/Clues\";\nimport { useSettings } from \"./context/useSettings\";\nimport axios from \"axios\";\n\nexport const CluesContext = React.createContext();\n\nexport const Main = () => {\n  const { settings, setSettings } = useSettings();\n  const [clues, setClues] = useState();\n\n  useEffect(() => {\n    setSettings({\n      baseURL: process.env.REACT_APP_BASE_URL,\n      url: {\n        new: process.env.REACT_APP_URL_NEW,\n        clues: process.env.REACT_APP_URL_CLUES,\n        suggest: process.env.REACT_APP_URL_SUGGEST,\n        accuse: process.env.REACT_APP_URL_ACCUSE,\n      },\n      auth: {\n        username: process.env.REACT_APP_USERNAME,\n        password: process.env.REACT_APP_PASSWORD,\n      },\n      clueTypes: {\n        suspect: process.env.REACT_APP_SUSPECT,\n        weapon: process.env.REACT_APP_WEAPON,\n        room: process.env.REACT_APP_ROOM,\n      },\n    });\n  }, [setSettings]);\n\n  useEffect(() => {\n    if (settings) {\n      // De settings zijn geladen, haal hier de aanwijzingen op en bewaar ze in de state (setClues)\n      console.log(\"userename : \" + settings.map(setting => setting.username))\n      //TODO: fix => settings are undefined ? => get rid of hardcoded username and password\n\n      axios.get(\"https://htf-2021.calibrate.be/api/cluedo/clues\" , {\n      auth: {\n        username: \"mortarcycle\",\n        password: \"hackthefuture\"\n      }\n    }).then((res)=>{\n\n      const clues = res.data; \n\n      setClues(clues);\n\n      console.log(res.data)\n\n      console.log(\"clues: \" + clues.map(clue => clue.id))\n\n      // clues.forEach(clue => \n      //   setClues(\n      //     {\n      //       type: clue.type,\n      //       id: clue.id,\n      //       title: clue.title,\n      //     }\n      //   )\n      //   )\n      //   console.log(clue.type)\n      // });\n\n \n    }).catch(err => {\n      console.log(err)\n    }); \n    \n    \n    \n\n\n\n    }\n  }, [settings]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1>Hack The Future</h1>\n        <div className={\"panel-1\"}>\n          <Menu />\n          <Checklist />\n        </div>\n        <div className={\"panel-2\"}>\n          <CluesContext.Provider value={clues}>\n            <Switch>\n              <Route path={[\"/\", \"/intro\"]} exact render={() => <Intro />} />\n              <Route path=\"/cluedo\" render={() => <Cluedo />} />\n              <Route path=\"/clues\" render={() => <Clues />} />\n            </Switch>\n          </CluesContext.Provider>\n        </div>\n      </div>\n    </Router>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}